language: node_js
node_js: 6
sudo: required
git:
  depth: 5
branches:
  only:
  - "/^(?i:SWIK)-.*$/"
  - master
cache:
  directories:
  - "./application/node_modules"
before_install:
- if [ "$TRAVIS_BRANCH" == "master" ] && [ "$TRAVIS_PULL_REQUEST" = "false" ] ; then ./travis_scripts/install_compose.sh ; fi
- cd application
before_script:
- npm update --dev
- npm run start:mongodb
script:
- sleep 15
- npm run lint
- npm run test:unit
- npm run test:integration
after_success:
- cd ..
- openssl aes-256-cbc -K $encrypted_698f4c6f0c99_key -iv $encrypted_698f4c6f0c99_iv -in deployment_keys.tar.enc -out deployment_keys.tar -d
- if [ "$TRAVIS_BRANCH" == "master" ] && [ "$TRAVIS_PULL_REQUEST" = "false" ] ; then ./travis_scripts/dockerhub.sh ; fi
- if [ "$TRAVIS_BRANCH" == "master" ] && [ "$TRAVIS_PULL_REQUEST" = "false" ] ; then ./travis_scripts/deploy.sh ; fi
- cd application
after_script:
- npm run coverall
- npm run stop:mongodb
- rm -f deployment_keys.tar
- rm -f ~/.docker/{cert.pem,key.pem,ca.pem,config.json}
services:
- docker
notifications:
  slack:
    on_success: change
    on_failure: always
    rooms:
      secure: TMJiG5DvRmLicL/H/uz0l4wQCoaMhy08hfEjBLDNloe/2arMEOUpHH7CHrSr1VH3h6mbTNm1VJU8Pb3AsTxIVyNihi3wRItpxClfpIoWdb24JYqCO7YpjDBDfi/HHplLXWCc5z3n5dyFi6KYF1EE0QUzlwlkfFZS4Aj2aGaFGiQ74Taey02CrL24dPytfwUpDKonBmcmterhO41MwxxSei4KzpDv7mnLWXnm09sHIT39apBxwTtJ/+VS0wPkXauin3GVY8uxhxuliEfBrGUQqnLctbsSNP9d1tFpNVlnO9EzduUNHLjDvoM8xS1m1pHqnJJHueRcvYOxMAFElqZDmKLv4+hLV7jc1e5/V2IIfhF1462JL9IkXIbcFqv81nBuj8icwbFc6KG5vysXF3wlAUI/Klf2IHMa7gZskL/TCzwKNUUietXPpNh5DMLgpmg5WE0KQZ3++9+EFPodhW6tF7GPv9CCOWQckSq14TvjQkDs3j2trtLM7mj+8B0DzAQLnMnwrtmXeYdGhBOdpcOuL7zyrbqc3568cJKkv1eJtIg66SRLW9tFSy5eqnTXu6R7Bi8kvRcwfwiu0Qedj9dUaF2oRUiS9ly6b3ugEaFfUqQ1IvvzRczMcwqdMslvTOZAz8bbDwDQk0yZYQnt88+Df05jTf7AIxQvjmxDN/gBtZA=
env:
  global:
  - DOCKER_COMPOSE_VERSION=1.6.2
  - DATABASE_PORT=27018
  - secure: xetaAlLhqe8zTfCIn2V7bCfdzBzkdlKxldhWsofJtA+2u99PllbqFzd3w10VUcUh3b6kUAvzNWCLhz/Uia+t5gxagPWobCVEG/ImA9VHYnVvb1pNMApdg8Baa4ULfZVb344sBZNR/q/vT7SoBaw7bFaXSRQP8AxBsuk23Vf4m4k29iXp/wNj8s2/nu0Mj9jIAUWzLxE7lM+YaAgjaBJHit39BRI+cWAQaUIm887DRldiVw3lsF/i3sPT071g5RKCZ/gfbrF60t0CUeV+9bXxebe08yjJnqPzR18L6SfGH7zwi8eJKCKyyvarA33G2xiAwQl/AccCzxwXphi9RISxL/YbnNkH9yQB4kc8e8zDZmOhQxn7xyQYfqu+ZJxNUMl62iKmVHD3HHOm5uoVP1z7W3rOx6uBO3wRj/GgqGQ3vd2D1s07loh52Uk6Ya9tuxUm2cOyWec4wlCLUSaq/4QcZZMzWxxTz227sQbQ8hsvHRH62jsqzgPME15nLO7u9S3ZDPjD1qFNJ93OOVyAcvJWTnvbqLfg88R3A0eHX58GNw7AM3P5GqMpXy094483iSPT0FX+zE9rusnw+tn7kZA37rFLthrbO7waaJaU6unYWew/ukoQdoFG2g6jS9g68y2GAxhJY7MdmhLTRTslq60a5ghX/3pfLjLxN1DGParjwKo=
  - secure: bn0AWinqT0UWCdX3s0ej72C9iIR/D8/gERIKuJYKt9jZIg0uZKMyL47RUyNWuqexxRz/NPRnsctrflNxJOGqVF0BaY62Swh6/onimN6RZSY0BMo54rmFly7+0fpZ5atK9pm47vZMitEvPaOJz0js1hAGXUPkew0/epwdP6hhM7gVML+l/GcCgk+FBVUKSEXrA3gjgSOCQiT8aw/dn1JvXlURDD42Op5AgPmkyDtkH1tWH7VeU8i0g9Lg9sIDdE66CV4+N9avVVfn6zaBd0F9Wwjlqqyt7WwpzvwfJLeZep3gqUpBG/J5ZbjCp7BZXbDOjUwp1zJBwQQKZ8OGEUXXTQBX6F3nl2STzJ9xRQqwEos2BSAedPINGBxTY6axekeNbghe4mMj+Kl+p/hseywoZXSr8elc02Sh//kXqvgisebfASZt1efMQZ1cWv4Va02WETVV7P8YazJwt6K24Uzq9pyo858pgr3aaRdMAI2dfvTM+jQBQLKpZfnQdbs6PxSw6iNVKMyKZ6/ZZDOxg8AQniZLCAjngaAccRmD1U+RZWL5Zr5tC6SAVyCJ0oMeR45pNg1vhHhup/Fq/g7uzQFtG8nHgExxvPv29luYLMCHgPJd21JbCCwpONtvFOdhNJlOi7DKvqoiOoriXElGVcPLEiUC+S75bovOPtWNN2diWds=
  - secure: vqVulrgIIxs2LQj81SWBJWlI3ZI0OQuIeDLKuF1O84QA0bCA7tYvqR/2JLfDaUQAk0DDmWPhtSNUEvPtjWRnpWpP1RZoCohfHTTmWVvZlUn8LgyHskl2E9admWwLtyH9QzX4TyyL4j8TMxpgMJSPaj2SC8rSt1hAk1vKdDQW+N9bUNO3J3LKP/F+OpkjYmvq9UaeWxJlCld/6T/dPsfQTQ5GSfdoWQR9vfSeFsy2yC89T5M8UlbYyR7v+ihcLiP1Wcwz+tQjD6oeFfook1f6E++St2jppsFWCTA+r7eOT7o4wr5bhYFHWbCz5Ffc6vuXFpjlckHC8iH3+Uj1Tycq9+RzrEDtZoFkeN9vtayLb3QCUMEL+rPIFWJPVfJ66cESN8FE/fRp/1ImkHF9HUy+FkQXMmis9hDKrBjj9cgrFV70RTrq4vivCiiLCr1ALSPCpifEPY9ptuTc4AOjvy6TVHhyfJTigd9ON1n/L6dYTi36/X/rMPnrf2oJ/In4F/g8QOntnhEs7I9a5mRfmZtzo+NZNhGofMkCRsTLrP//6liIhdq0Z5SVkImG0EaqfHwrf7fGqQzKgbIuqA3f2s1RiGArUsZFBw9JWbp6HcAJ2AvnRJ82eKta9+111KxJ/aQGAx083cNNUkyqQLPOQcGXo4lLXwL9/vMyYs23k7n1EZ4=
